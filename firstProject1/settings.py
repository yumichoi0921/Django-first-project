"""
Django settings for firstProject1 project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
# 현재 Django 프로젝트의 환경 및 구성을 설정

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '9d(06!2(_r7+*9gmd9buml-#e#869rney&1%jhn(ds_0q!!abn'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
# 프로젝트에서 사용하는 app을 등록시킴
# app이란 프로젝트를 구성하는 작은 단위(모듈), app들이 모여서 하나의 프로젝트 구성
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blogapp.apps.BlogappConfig',
    'ckeditor', #text 편집기
    'ckeditor_uploader', #이미지 업로드
]
# 업로드 파일의 경로를 지정 ('media'루트 디렉토리의 하위 디렉토리)
CKEDITOR_UPLOAD_PATH = "uploads/"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'firstProject1.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [BASE_DIR / 'blogapp/templates']
        # 템플릿의 기본 위치 변경
        'DIRS' : [os.path.join(BASE_DIR, 'firstProject1/templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'firstProject1.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

# static file]의 위치를 지정
# STATICFILES_DIRS]: [blogapp] 안에 [static] 디렉토리에 'static file'들을 지정해놓았다는 것을 알려줌
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'blogapp', 'static')
]

# [STATIC_ROOT]: 하나의 프로젝트에서 흩어져있는 'static file'들을 한 곳으로 모으는데
# 프로젝트 디렉토리에서 [static] 디렉토리에 모을 것이라는 의미
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# 사용자들이 올리는 파일들 'media'로 분류
MEDIA_URL = '/media/'
# 'media'루트를 설정 (static 파일처럼)
MEDIA_ROOT = 'media/'